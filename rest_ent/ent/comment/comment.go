// Code generated by ent, DO NOT EDIT.

package comment

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the comment type in the database.
	Label = "comment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// EdgeWriter holds the string denoting the writer edge name in mutations.
	EdgeWriter = "writer"
	// EdgeReplyTo holds the string denoting the reply_to edge name in mutations.
	EdgeReplyTo = "reply_to"
	// EdgeReplies holds the string denoting the replies edge name in mutations.
	EdgeReplies = "replies"
	// EdgeBelongto holds the string denoting the belongto edge name in mutations.
	EdgeBelongto = "belongto"
	// Table holds the table name of the comment in the database.
	Table = "comments"
	// WriterTable is the table that holds the writer relation/edge.
	WriterTable = "comments"
	// WriterInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	WriterInverseTable = "users"
	// WriterColumn is the table column denoting the writer relation/edge.
	WriterColumn = "user_comments"
	// ReplyToTable is the table that holds the reply_to relation/edge.
	ReplyToTable = "comments"
	// ReplyToColumn is the table column denoting the reply_to relation/edge.
	ReplyToColumn = "comment_replies"
	// RepliesTable is the table that holds the replies relation/edge.
	RepliesTable = "comments"
	// RepliesColumn is the table column denoting the replies relation/edge.
	RepliesColumn = "comment_replies"
	// BelongtoTable is the table that holds the belongto relation/edge.
	BelongtoTable = "comments"
	// BelongtoInverseTable is the table name for the Blog entity.
	// It exists in this package in order to avoid circular dependency with the "blog" package.
	BelongtoInverseTable = "blogs"
	// BelongtoColumn is the table column denoting the belongto relation/edge.
	BelongtoColumn = "blog_comments"
)

// Columns holds all SQL columns for comment fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldContent,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "comments"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"blog_comments",
	"comment_replies",
	"user_comments",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
